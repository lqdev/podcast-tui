{"$message_type":"diagnostic","message":"field `config` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/app.rs","byte_start":178,"byte_end":181,"line_start":7,"line_end":7,"column_start":12,"column_end":15,"is_primary":false,"text":[{"text":"pub struct App {","highlight_start":12,"highlight_end":15}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/app.rs","byte_start":188,"byte_end":194,"line_start":8,"line_end":8,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    config: Config,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `config` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/app.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct App {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    config: Config,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `impl` can be derived","code":{"code":"clippy::derivable_impls","explanation":null},"level":"warning","spans":[{"file_name":"src/config.rs","byte_start":1716,"byte_end":2032,"line_start":56,"line_end":66,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"impl Default for Config {","highlight_start":1,"highlight_end":26},{"text":"    fn default() -> Self {","highlight_start":1,"highlight_end":27},{"text":"        Self {","highlight_start":1,"highlight_end":15},{"text":"            audio: AudioConfig::default(),","highlight_start":1,"highlight_end":43},{"text":"            downloads: DownloadConfig::default(),","highlight_start":1,"highlight_end":50},{"text":"            keybindings: KeybindingConfig::default(),","highlight_start":1,"highlight_end":54},{"text":"            storage: StorageConfig::default(),","highlight_start":1,"highlight_end":47},{"text":"            ui: UiConfig::default(),","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::derivable_impls)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace the manual implementation with a derive attribute","code":null,"level":"help","spans":[{"file_name":"src/config.rs","byte_start":1716,"byte_end":2033,"line_start":56,"line_end":67,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl Default for Config {","highlight_start":1,"highlight_end":26},{"text":"    fn default() -> Self {","highlight_start":1,"highlight_end":27},{"text":"        Self {","highlight_start":1,"highlight_end":15},{"text":"            audio: AudioConfig::default(),","highlight_start":1,"highlight_end":43},{"text":"            downloads: DownloadConfig::default(),","highlight_start":1,"highlight_end":50},{"text":"            keybindings: KeybindingConfig::default(),","highlight_start":1,"highlight_end":54},{"text":"            storage: StorageConfig::default(),","highlight_start":1,"highlight_end":47},{"text":"            ui: UiConfig::default(),","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/config.rs","byte_start":198,"byte_end":198,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub struct Config {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(Default)]\n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `impl` can be derived\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/config.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Default for Config {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            audio: AudioConfig::default(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::derivable_impls)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: replace the manual implementation with a derive attribute\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ #[derive(Default)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mpub struct Config {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/storage/json.rs","byte_start":2074,"byte_end":2096,"line_start":67,"line_end":67,"column_start":32,"column_end":54,"is_primary":true,"text":[{"text":"        self.podcasts_dir.join(format!(\"{}.json\", id))","highlight_start":32,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::uninlined_format_args)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/storage/json.rs","byte_start":2084,"byte_end":2084,"line_start":67,"line_end":67,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"        self.podcasts_dir.join(format!(\"{}.json\", id))","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":"id","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/storage/json.rs","byte_start":2091,"byte_end":2095,"line_start":67,"line_end":67,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"        self.podcasts_dir.join(format!(\"{}.json\", id))","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/storage/json.rs:67:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.podcasts_dir.join(format!(\"{}.json\", id))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::uninlined_format_args)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        self.podcasts_dir.join(format!(\"{}.json\"\u001b[0m\u001b[0m\u001b[38;5;9m, id\u001b[0m\u001b[0m))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        self.podcasts_dir.join(format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mid\u001b[0m\u001b[0m}.json\"))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/storage/json.rs","byte_start":2484,"byte_end":2514,"line_start":78,"line_end":78,"column_start":19,"column_end":49,"is_primary":true,"text":[{"text":"            .join(format!(\"{}.json\", episode_id))","highlight_start":19,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/storage/json.rs","byte_start":2494,"byte_end":2494,"line_start":78,"line_end":78,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"            .join(format!(\"{}.json\", episode_id))","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"episode_id","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/storage/json.rs","byte_start":2501,"byte_end":2513,"line_start":78,"line_end":78,"column_start":36,"column_end":48,"is_primary":true,"text":[{"text":"            .join(format!(\"{}.json\", episode_id))","highlight_start":36,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/storage/json.rs:78:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .join(format!(\"{}.json\", episode_id))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            .join(format!(\"{}.json\"\u001b[0m\u001b[0m\u001b[38;5;9m, episode_id\u001b[0m\u001b[0m))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            .join(format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mepisode_id\u001b[0m\u001b[0m}.json\"))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `map_or` can be simplified","code":{"code":"clippy::unnecessary_map_or","explanation":null},"level":"warning","spans":[{"file_name":"src/podcast/models.rs","byte_start":3610,"byte_end":3664,"line_start":119,"line_end":119,"column_start":16,"column_end":70,"is_primary":true,"text":[{"text":"            && self.local_path.as_ref().map_or(false, |p| p.exists())","highlight_start":16,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::unnecessary_map_or)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use is_some_and instead","code":null,"level":"help","spans":[{"file_name":"src/podcast/models.rs","byte_start":3635,"byte_end":3641,"line_start":119,"line_end":119,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"            && self.local_path.as_ref().map_or(false, |p| p.exists())","highlight_start":41,"highlight_end":47}],"label":null,"suggested_replacement":"is_some_and","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":3642,"byte_end":3649,"line_start":119,"line_end":119,"column_start":48,"column_end":55,"is_primary":true,"text":[{"text":"            && self.local_path.as_ref().map_or(false, |p| p.exists())","highlight_start":48,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `map_or` can be simplified\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/podcast/models.rs:119:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && self.local_path.as_ref().map_or(false, |p| p.exists())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::unnecessary_map_or)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use is_some_and instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            && self.local_path.as_ref().\u001b[0m\u001b[0m\u001b[38;5;9mmap_or\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;9mfalse, \u001b[0m\u001b[0m|p| p.exists())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            && self.local_path.as_ref().\u001b[0m\u001b[0m\u001b[38;5;10mis_some_and\u001b[0m\u001b[0m(|p| p.exists())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/podcast/models.rs","byte_start":5048,"byte_end":5095,"line_start":164,"line_end":164,"column_start":21,"column_end":68,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":21,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/podcast/models.rs","byte_start":5058,"byte_end":5058,"line_start":164,"line_end":164,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"hours","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5061,"byte_end":5061,"line_start":164,"line_end":164,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5067,"byte_end":5067,"line_start":164,"line_end":164,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"secs","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5072,"byte_end":5079,"line_start":164,"line_end":164,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":45,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5079,"byte_end":5088,"line_start":164,"line_end":164,"column_start":52,"column_end":61,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":52,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5088,"byte_end":5094,"line_start":164,"line_end":164,"column_start":61,"column_end":67,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":61,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/podcast/models.rs:164:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    format!(\"{}:{:02}:{:02}\", hours, minutes, secs)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                    format!(\"{}:{:02}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, hours, minutes, secs\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                    format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mhours\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m:02}:{\u001b[0m\u001b[0m\u001b[38;5;10msecs\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/podcast/models.rs","byte_start":5141,"byte_end":5175,"line_start":166,"line_end":166,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}\", minutes, secs)","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/podcast/models.rs","byte_start":5151,"byte_end":5151,"line_start":166,"line_end":166,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}\", minutes, secs)","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5154,"byte_end":5154,"line_start":166,"line_end":166,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}\", minutes, secs)","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"secs","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5159,"byte_end":5168,"line_start":166,"line_end":166,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}\", minutes, secs)","highlight_start":39,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":5168,"byte_end":5174,"line_start":166,"line_end":166,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"                    format!(\"{}:{:02}\", minutes, secs)","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/podcast/models.rs:166:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    format!(\"{}:{:02}\", minutes, secs)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                    format!(\"{}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, minutes, secs\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                    format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10msecs\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/podcast/models.rs","byte_start":7446,"byte_end":7496,"line_start":246,"line_end":246,"column_start":13,"column_end":63,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":13,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/podcast/models.rs","byte_start":7456,"byte_end":7456,"line_start":246,"line_end":246,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"hours","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7459,"byte_end":7459,"line_start":246,"line_end":246,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7465,"byte_end":7465,"line_start":246,"line_end":246,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"seconds","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7470,"byte_end":7477,"line_start":246,"line_end":246,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7477,"byte_end":7486,"line_start":246,"line_end":246,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7486,"byte_end":7495,"line_start":246,"line_end":246,"column_start":53,"column_end":62,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)","highlight_start":53,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/podcast/models.rs:246:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            format!(\"{}:{:02}:{:02}\", hours, minutes, seconds)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            format!(\"{}:{:02}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, hours, minutes, seconds\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mhours\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m:02}:{\u001b[0m\u001b[0m\u001b[38;5;10mseconds\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/podcast/models.rs","byte_start":7526,"byte_end":7563,"line_start":248,"line_end":248,"column_start":13,"column_end":50,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}\", minutes, seconds)","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/podcast/models.rs","byte_start":7536,"byte_end":7536,"line_start":248,"line_end":248,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}\", minutes, seconds)","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7539,"byte_end":7539,"line_start":248,"line_end":248,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}\", minutes, seconds)","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"seconds","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7544,"byte_end":7553,"line_start":248,"line_end":248,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}\", minutes, seconds)","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/podcast/models.rs","byte_start":7553,"byte_end":7562,"line_start":248,"line_end":248,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"            format!(\"{}:{:02}\", minutes, seconds)","highlight_start":40,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/podcast/models.rs:248:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            format!(\"{}:{:02}\", minutes, seconds)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            format!(\"{}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, minutes, seconds\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10mseconds\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"you should consider adding a `Default` implementation for `UiApp`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/ui/app.rs","byte_start":159,"byte_end":200,"line_start":9,"line_end":11,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Self","highlight_start":1,"highlight_end":13},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::new_without_default)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/ui/app.rs","byte_start":142,"byte_end":142,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl UiApp {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl Default for UiApp {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `UiApp`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ui/app.rs:9:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::new_without_default)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ impl Default for UiApp {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/time.rs","byte_start":282,"byte_end":329,"line_start":10,"line_end":10,"column_start":9,"column_end":56,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/utils/time.rs","byte_start":292,"byte_end":292,"line_start":10,"line_end":10,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"hours","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":295,"byte_end":295,"line_start":10,"line_end":10,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":301,"byte_end":301,"line_start":10,"line_end":10,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"secs","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":306,"byte_end":313,"line_start":10,"line_end":10,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":313,"byte_end":322,"line_start":10,"line_end":10,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":40,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":322,"byte_end":328,"line_start":10,"line_end":10,"column_start":49,"column_end":55,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)","highlight_start":49,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/time.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        format!(\"{}:{:02}:{:02}\", hours, minutes, secs)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        format!(\"{}:{:02}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, hours, minutes, secs\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mhours\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m:02}:{\u001b[0m\u001b[0m\u001b[38;5;10msecs\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variables can be used directly in the `format!` string","code":{"code":"clippy::uninlined_format_args","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/time.rs","byte_start":351,"byte_end":385,"line_start":12,"line_end":12,"column_start":9,"column_end":43,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}\", minutes, secs)","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/utils/time.rs","byte_start":361,"byte_end":361,"line_start":12,"line_end":12,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}\", minutes, secs)","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"minutes","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":364,"byte_end":364,"line_start":12,"line_end":12,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}\", minutes, secs)","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"secs","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":369,"byte_end":378,"line_start":12,"line_end":12,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}\", minutes, secs)","highlight_start":27,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/time.rs","byte_start":378,"byte_end":384,"line_start":12,"line_end":12,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"        format!(\"{}:{:02}\", minutes, secs)","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variables can be used directly in the `format!` string\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/time.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        format!(\"{}:{:02}\", minutes, secs)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change this to\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        format!(\"{}:{:02}\"\u001b[0m\u001b[0m\u001b[38;5;9m, minutes, secs\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        format!(\"{\u001b[0m\u001b[0m\u001b[38;5;10mminutes\u001b[0m\u001b[0m}:{\u001b[0m\u001b[0m\u001b[38;5;10msecs\u001b[0m\u001b[0m:02}\")\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"12 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 12 warnings emitted\u001b[0m\n\n"}
