name: Release Builds

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    name: Build Linux releases
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install build dependencies
        run: |
          chmod +x scripts/install-build-deps.sh
          ./scripts/install-build-deps.sh
      
      - name: Build Linux releases
        run: |
          chmod +x scripts/build-linux.sh
          ./scripts/build-linux.sh
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: podcast-tui-linux-releases
          path: releases/
          retention-days: 30

  build-windows:
    name: Build Windows releases
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install build dependencies
        shell: pwsh
        run: |
          ./scripts/install-build-deps.ps1
      
      - name: Build Windows releases
        shell: pwsh
        run: |
          ./scripts/build-releases-windows.ps1
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: podcast-tui-windows-releases
          path: releases/
          retention-days: 30

  create-release:
    name: Create GitHub Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: podcast-tui-linux-releases
          path: releases/
      
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: podcast-tui-windows-releases
          path: releases/
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/**/*.zip
            releases/**/*.tar.gz
            releases/**/*.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-builds:
    name: Test release artifacts
    needs: [build-linux, build-windows]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Download Linux artifacts
        if: runner.os == 'Linux'
        uses: actions/download-artifact@v4
        with:
          name: podcast-tui-linux-releases
          path: releases/
      
      - name: Download Windows artifacts
        if: runner.os == 'Windows'
        uses: actions/download-artifact@v4
        with:
          name: podcast-tui-windows-releases
          path: releases/
      
      - name: Test Linux binary
        if: runner.os == 'Linux'
        run: |
          cd releases/v*/
          tar -xzf *linux-x86_64.tar.gz
          cd *linux-x86_64/
          chmod +x podcast-tui
          ./podcast-tui --version || true
      
      - name: Test Windows binary
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd releases/v*
          Expand-Archive -Path *windows-x86_64.zip -DestinationPath .
          cd *windows-x86_64
          ./podcast-tui.exe --version
